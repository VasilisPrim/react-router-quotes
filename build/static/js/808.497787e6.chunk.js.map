{"version":3,"file":"static/js/808.497787e6.chunk.js","mappings":"4MACA,EAA2B,gC,iBCY3B,EAXsB,WACpB,OACE,iBAAKA,UAAWC,EAAiB,WAC/B,uBAAG,sBACH,SAAC,KAAI,CAACD,UAAU,MAAME,GAAG,aAAY,SAAC,kBAK5C,E,SCVA,EAAuB,wBCmBvB,EAjBkB,SAACC,GACjB,OACE,gBAAIH,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIE,EAAMC,UAEZ,gCAAaD,EAAME,aAErB,SAAC,KAAI,CAACL,UAAU,MAAME,GAAE,kBAAaC,EAAMG,IAAK,SAAC,sBAMvD,ECjBA,EAAuB,wBAAvB,EAAyD,2BCsDzD,EAvCkB,SAACH,GACjB,IAXkBI,EAAQC,EAWpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QACrCC,GAjBYV,EAiBcJ,EAAMI,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAqBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKrB,UAAWC,EAAgB,UAC9B,oBAAQqB,QAZe,WAG1Bb,EACEE,EAASY,SAAQ,gBAAYV,EAAqB,OAAS,OAIhE,EAI4C,UAAC,QAC/BA,EAAqB,aAAe,kBAG9C,eAAIb,UAAWC,EAAa,SACzBgB,EAAaO,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERnB,GAAImB,EAAMnB,GACVD,OAAQoB,EAAMpB,OACdD,KAAMqB,EAAMrB,MAHPqB,EAAMnB,GAIX,QAKZ,E,SCXA,EAjCkB,SAACH,GACjB,OAAmDuB,EAAAA,EAAAA,GAAQC,EAAAA,IAAa,GAAjEC,EAAW,EAAXA,YAAYC,EAAM,EAANA,OAAYC,EAAU,EAAfC,KAAgBC,EAAK,EAALA,MAQ1C,OAPAC,QAAQC,IAAIJ,IAEZK,EAAAA,EAAAA,YAAU,WACRP,GACF,GAAE,CAACA,IAGU,YAATC,GACK,gBAAK7B,UAAU,WAAU,UAC9B,SAACoC,EAAA,EAAc,MAIhBJ,GACM,cAAGhC,UAAU,mBAAkB,SAAEgC,IAG9B,cAATH,GAA0BC,GAAoC,IAAtBA,EAAWO,QAQpD,SAAC,WAAc,WACb,SAAC,EAAS,CAAC9B,OAAUuB,OARhB,SAAC,EAAa,GAWzB,C","sources":["webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__EUQsM\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/add-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__Q6KwW\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        \n        View Fullscreen \n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__MLz6k\",\"sorting\":\"QuoteList_sorting__GDrEn\"};","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscenting = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscenting);\n\n  const changeSortingHandler = () => {\n    \n    \n     navigate(\n       location.pathname + `?sort=${isSortingAscenting ? \"desc\" : \"asc\"}`\n     );\n    //   search: `?sort=${isSortingAscenting ? \"desc\" : \"asc\"}`,\n    // });\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscenting ? \"Descenting\" : \"Ascenting\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import React ,{useEffect} from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\n\n\nconst AllQuotes = (props) => {\n  const {sendRequest,status,data:loadedData,error} = useHttp(getAllQuotes,true);\n  console.log(loadedData)\n\n  useEffect(()=>{\n    sendRequest();\n  },[sendRequest]);\n\n\n  if (status==='pending'){\n    return <div className=\"centered\">\n      <LoadingSpinner/>\n    </div>\n  }\n\n  if(error){\n    return <p className=\"centered focused\">{error}</p>\n  }\n\n  if(status==='completed' && (!loadedData || loadedData.length === 0)){\n    return <NoQuotesFound/>\n  }\n\n  \n\n\n  return (\n    <React.Fragment>\n      <QuoteList quotes = {loadedData}/>\n    </React.Fragment>\n  );\n};\n\nexport default AllQuotes;\n"],"names":["className","classes","to","props","text","author","id","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscenting","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedData","data","error","console","log","useEffect","LoadingSpinner","length"],"sourceRoot":""}