{"version":3,"file":"static/js/923.3bf71ae4.chunk.js","mappings":"qNACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCyDnI,EAnDkB,SAACH,GACjB,OAAmCI,EAAAA,EAAAA,WAAS,GAAM,eAAhCC,GAAD,KAAc,MAEzBC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAmBrB,OACE,SAAC,WAAc,WAEb,SAAC,EAAI,WACH,kBAAME,QAXY,WACtBJ,GAAc,EAChB,EASuCJ,UAAWC,EAAcQ,SArBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAIzCf,EAAMiB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAY4F,UACnFhB,EAAMoB,YACL,gBAAKnB,UAAWC,EAAgB,UAC9B,SAACmB,EAAA,EAAc,OAInB,iBAAKpB,UAAWC,EAAgB,WAC9B,kBAAOoB,QAAQ,SAAQ,SAAC,YACxB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKnB,QAEtC,iBAAKL,UAAWC,EAAgB,WAC9B,kBAAOoB,QAAQ,OAAM,SAAC,UACtB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKjB,QAEpC,gBAAKP,UAAWC,EAAgB,UAC9B,mBAAQyB,QAxBO,WACvBtB,GAAc,EAChB,EAsB6CJ,UAAU,MAAK,SAAC,sBAM/D,E,SCjCA,EAjBiB,WACf,OAAgC2B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAEfC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAS,UAEb,GAAG,CAACD,EAAQC,IAKZ,OAAO,SAAC,EAAS,CAACZ,UAAwB,YAAXW,EAAsBd,WAJ7B,SAACkB,GACvBL,EAAYK,EACd,GAGF,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/AddQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__9h8Dh\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import React, { useRef ,useState} from 'react';\n\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering,setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formFocusHandler =() =>{\n    setIsEntering(true);\n  }\n  const onFinishEntering = () =>{\n    setIsEntering(false);\n  }\n\n  return (\n    <React.Fragment>\n      \n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={onFinishEntering} className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../hooks/use-http\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { addQuote } from \"../lib/api\";\n\nconst AddQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      navigate(\"/quotes\");\n    }\n  }, [status, navigate]);\n  const addQuoteHandler = (quote) => {\n    sendRequest(quote);\n  };\n\n  return <QuoteForm isLoading = {status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default AddQuote;\n"],"names":["props","className","classes","children","useState","setIsEntering","authorInputRef","useRef","textInputRef","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quote"],"sourceRoot":""}